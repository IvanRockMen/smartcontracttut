
/**
 * This file was generated by TONDev.
 * TONDev is a part of TON OS (see http://ton.dev).
 */
pragma ton-solidity >= 0.35.0;
pragma AbiHeader expire;

import "GameObject.sol";
import "Base.sol";
// This is class that describes you smart contract.
abstract contract WarUnit is GameObject
{
    uint private life;
    Base private warBase;
    address private base;

    constructor(Base _base) public {
        require(tvm.pubkey() != 0, 101);

        require(msg.pubkey() == tvm.pubkey(), 102);

        tvm.accept();
        warBase = _base;
        tvm.accept();
        base = address(warBase);
        tvm.accept();
        warBase.addWarrior(address(this), this);
    }

    function getAttack() public virtual returns (uint);

    function attack(GameObject target) public
    {
        tvm.accept();
        uint damage = getAttack() - target.getDefence();
        tvm.accept();
        target.applyDamage(damage);
    }

    


}